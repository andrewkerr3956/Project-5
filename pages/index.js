import Head from 'next/head'
import Image from 'next/image'
import { useState, useEffect } from 'react'
import Link from 'next/link'
import styles from '../styles/Home.module.css'

export default function Home() {
  /*
  const [categories, setCategories] = useState([]); // Get the categories from the database
  const [currentCategory, setCurrentCategory] = useState(0); // Set the category id to the one the user selected
  const [categoryTitle, setCategoryTitle] = useState(""); // Category title based on the one the user selected
  const [questionText, setQuestionText] = useState(""); // The question text value in the create question section of a category
  const [detailsText, setDetailsText] = useState(""); // The details text value in the create question section of a category
  const [questionsList, setQuestionsList] = useState([]); // The questions list will hold the questions obtained from the chosen categories

  // When the page is loaded, fetch the categories once.
  useEffect(() => {
    fetchCategories();
  }, []);
  // When the page is loaded, determine if their is a user logged in. If not, display that they must login to create questions.
  useEffect(() => {
    if (!sessionStorage.getItem("userid")) {
      setQuestionText("Login to create a question.")
      setDetailsText("You must be logged in to create a question.")
    }
  }, []);
  // When the page is loaded, determine if their is a user logged in. If not, display the login and register buttons.
  useEffect(() => {
    if (sessionStorage.getItem("userid")) {
      document.getElementById("displayButtons").style = "display: none;";
      document.getElementById("titlePositioner").style = "margin-top: -20px;";
      document.getElementById("displayUsername").innerText = `Welcome, ${sessionStorage.getItem("username")}!`;
      document.getElementById("displayPoints").innerText = `${sessionStorage.getItem("points")} points`;
      document.getElementById("displayLogout").style = "display: block;";
    }
  }, []);
  // When currentCategory is changed, fetch the questions from the selected category.
  useEffect(() => {
    fetchQuestions();
  }, [currentCategory])
  // When currentCategory is changed, refresh the questions list.
  useEffect(() => {
    setQuestionsList([]);
  }, [currentCategory])

  const fetchQuestions = async () => {
    let data = await fetch(`/api/question?categoryid=${currentCategory}`);
    data = await data.json();
    console.log(data.results)
    if(data.results) {
      // Handle if there are results
      let tempArray = [];
      data.results.map((item) => {
        return tempArray.push({questionid: item.questionid, question: item.question, author: item.author});
      })
      setQuestionsList(tempArray);
    }
    else {
      // Handle no results
      let tempArray = [];
      tempArray.push("There are currently no questions.");
      setQuestionsList(tempArray);
    }
  }

  const fetchCategories = async () => {
    // This will fetch all the categories
    let data = await fetch(`/api/category`);
    data = await data.json();
    let categoryArray = [];
    for (let i = 0; i < data.results.length; i++) {
      categoryArray.push(data.results[i].category);
    }
    setCategories(categoryArray);
  }

  const changeCategory = async (event) => {
    setCurrentCategory(event.target.id);
    let data = await fetch(`/api/category?id=${event.target.id}`); // Reason why I supplied target id is because the setState may not be finished by the time the fetch is called.
    data = await data.json();
    setCategoryTitle(data.results[0].category);
  }

  const handleQuestionText = async (event) => {
    setQuestionText(event.target.value);
  }

  const handleDetailsText = async (event) => {
    setDetailsText(event.target.value);
  }

  const submitQuestion = async() => {
    // Handles submitting a question.
    let data = await fetch(`/api/question`, {
      method: 'POST',
      headers: {
        'Content-Type' : 'application/json'
      },
      body: JSON.stringify({
        question: questionText,
        questionDetails: detailsText,
        userid: sessionStorage.userid,
        categoryid: currentCategory
      })
    });
    data = await data.json();
    if(data.success) {
      alert("Question has been successfully created!");
    }
  }
  */

  return (
    <div style={{textAlign: "center"}}>
      {/* <Head>
        <title>Answers Galore</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.headerContainer}>
        <h1 className={styles.title}>Answers Galore</h1>
        <div id="titlePositioner" style={{ marginTop: "20px" }}>
          <div id="displayUsername"></div><span id="displayPoints"></span><div id="displayLogout" style={{display: "none"}}><Link href={'/logout'} passHref><button>Logout</button></Link></div>
          <div id="displayButtons">
            <Link href={'/login'} passHref><button>Login</button></Link>
            <Link href={'/register'} passHref><button>Register</button></Link>
          </div>
        </div>
      </header>
      <main className={styles.container}>
        <aside>
          <ul>
            <nav className={styles.navContainer}>
              <button id={1} onClick={changeCategory} className={currentCategory == 1 ? styles.active : styles.navItem}><li style={{ marginTop: "10px" }}>{categories[0]}</li></button>
              <button id={2} onClick={changeCategory} className={currentCategory == 2 ? styles.active : styles.navItem}><li style={{ marginTop: "10px" }}>{categories[1]}</li></button>
              <button id={3} onClick={changeCategory} className={currentCategory == 3 ? styles.active : styles.navItem}><li style={{ marginTop: "10px" }}>{categories[2]}</li></button>
              <button id={4} onClick={changeCategory} className={currentCategory == 4 ? styles.active : styles.navItem}><li style={{ marginTop: "10px" }}>{categories[3]}</li></button>
              <button id={5} onClick={changeCategory} className={currentCategory == 5 ? styles.active : styles.navItem}><li style={{ marginTop: "10px" }}>{categories[4]}</li></button>
            </nav>
          </ul>
        </aside>
        <div className={styles.mainContainer}>
          {currentCategory === 0 && (
            <h2>Please select a category.</h2>
          )}
          {currentCategory > 0 && (
            <>
              <h2>Welcome to {categoryTitle}</h2> <p />
              <section name={"createQuestion"}>
                <h3>Create a Question</h3>
                <label htmlFor={"question"}> Question <br />
                  <input type="text" value={questionText} onChange={handleQuestionText} maxLength={200} readOnly={!sessionStorage.getItem("userid")} required />
                </label> <p />
                <label htmlFor={"details"}> Details <br />
                  <textarea value={detailsText} onChange={handleDetailsText} rows={4} cols={24} maxLength={200} readOnly={!sessionStorage.getItem("userid")} required />
                </label> <p />
                {sessionStorage.getItem("userid") && (
                  <button type="submit" onClick={submitQuestion}>Submit</button>
                )}
              </section>
              <section style={{ marginTop: "40px" }} name={"previousQuestions"}>
                <h3>Previous Questions</h3>
                <ul style={{listStyleType: 'none'}}>
                {questionsList.length > 0 && questionsList.map((item, idx) => {
                  if(item.questionid && item.question && item.author) {
                    // Check if we actually have questions in the array.
                    return <li key={idx}><Link href={`/question?qid=${item.questionid}`} passHref>{item.question}</Link><div>by <strong>{item.author}</strong></div></li>
                  }
                  else {
                    // No results from the database
                    return <li key={idx}>{item}</li>
                  }
                })}
                </ul>
              </section>
            </>
          )}
        </div>
      </main>

      <footer>

      </footer> */}
      <h2>Please select a category.</h2>
    </div>

  )
}
